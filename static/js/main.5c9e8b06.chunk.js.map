{"version":3,"sources":["hooks/useInputState.js","reducers/todo.reducer.js","reducers/useLocalStorage.reducer.js","contexts/todos.context.js","components/AddTodoForm.js","components/ToggleBtn.js","components/DeleteBtn.js","hooks/useEditState.js","components/EditTodoForm.js","components/TodoItem.js","components/TodoList.js","components/Tooltip.js","components/TodoApp.js","App.js","index.js"],"names":["initialVal","useState","value","setValue","e","target","reducer","state","action","type","id","uuid","content","isDone","filter","todo","map","newTodoContent","areAllCompleted","every","useLocalStorageReducer","key","useReducer","JSON","parse","localStorage","error","dispatch","useEffect","setItem","stringify","TodosContext","createContext","DispatchContext","TodosProvider","children","todoReducer","todos","Provider","AddTodoForm","useInputState","handleChange","reset","useContext","className","onSubmit","preventDefault","htmlFor","length","onClick","onChange","placeholder","ToggleBtn","hiddenClass","memo","useEditState","setState","toggleEditState","EditTodoForm","onBlur","autoFocus","TodoItem","isEditing","Fragment","onDoubleClick","Date","toDateString","TodoList","Tooltip","TodoApp","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c9e8b06.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport default initialVal => {\n\tconst [\n\t\tvalue,\n\t\tsetValue\n\t] = useState(initialVal);\n\n\tconst handleChange = e => {\n\t\tsetValue(e.target.value);\n\t};\n\n\tconst reset = () => {\n\t\tsetValue('');\n\t};\n\n\treturn [\n\t\tvalue,\n\t\thandleChange,\n\t\treset\n\t];\n};\n","import { v4 as uuid } from 'uuid';\n\nconst reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'ADD':\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\t{ id: uuid(), content: action.content, isDone: false }\n\t\t\t];\n\t\tcase 'DELETE':\n\t\t\treturn state.filter(todo => todo.id !== action.id);\n\t\tcase 'TOGGLE':\n\t\t\treturn state.map(\n\t\t\t\ttodo =>\n\t\t\t\t\ttodo.id === action.id\n\t\t\t\t\t\t? { ...todo, isDone: !todo.isDone }\n\t\t\t\t\t\t: todo\n\t\t\t);\n\t\tcase 'EDIT':\n\t\t\treturn state.map(\n\t\t\t\ttodo =>\n\t\t\t\t\ttodo.id === action.id\n\t\t\t\t\t\t? { ...todo, content: action.newTodoContent }\n\t\t\t\t\t\t: todo\n\t\t\t);\n\t\tcase 'TOGGLE_ALL':\n\t\t\tconst areAllCompleted = state.every(todo => todo.isDone);\n\t\t\treturn state.map(todo => ({\n\t\t\t\t...todo,\n\t\t\t\tisDone : !areAllCompleted\n\t\t\t}));\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import { useReducer, useEffect } from 'react';\n\nconst useLocalStorageReducer = (key, initialVal, reducer) => {\n\tconst [\n\t\tstate,\n\t\tdispatch\n\t] = useReducer(reducer, initialVal, () => {\n\t\tlet value;\n\t\ttry {\n\t\t\tvalue = JSON.parse(localStorage[key]) || initialVal;\n\t\t} catch (error) {\n\t\t\tvalue = initialVal;\n\t\t}\n\t\treturn value;\n\t});\n\n\tuseEffect(\n\t\t() => {\n\t\t\tlocalStorage.setItem(key, JSON.stringify(state));\n\t\t},\n\t\t[\n\t\t\tstate,\n\t\t\tkey\n\t\t]\n\t);\n\n\treturn [\n\t\tstate,\n\t\tdispatch\n\t];\n};\n\nexport default useLocalStorageReducer;\n","import React, { createContext } from 'react';\nimport todoReducer from '../reducers/todo.reducer';\nimport useLocalStorageReducer from '../reducers/useLocalStorage.reducer';\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\nconst TodosProvider = ({ children }) => {\n\tconst [\n\t\ttodos,\n\t\tdispatch\n\t] = useLocalStorageReducer('todos', [], todoReducer);\n\n\treturn (\n\t\t<TodosContext.Provider value={todos}>\n\t\t\t<DispatchContext.Provider value={dispatch}>\n\t\t\t\t{children}\n\t\t\t</DispatchContext.Provider>\n\t\t</TodosContext.Provider>\n\t);\n};\n\nexport default TodosProvider;\n","import React, { useContext } from 'react';\nimport useInputState from '../hooks/useInputState';\nimport { TodosContext } from '../contexts/todos.context';\nimport { DispatchContext } from '../contexts/todos.context';\n\nconst AddTodoForm = () => {\n\tconst [\n\t\tvalue,\n\t\thandleChange,\n\t\treset\n\t] = useInputState('');\n\n\tconst todos = useContext(TodosContext);\n\tconst dispatch = useContext(DispatchContext);\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tdispatch({ type: 'ADD', content: value });\n\t\treset();\n\t};\n\n\treturn (\n\t\t<form className='AddTodoForm' onSubmit={handleSubmit}>\n\t\t\t<label className='add-todo' htmlFor='add-todo'>\n\t\t\t\t{todos.length > 0 && (\n\t\t\t\t\t<i\n\t\t\t\t\t\tid='toggle-all'\n\t\t\t\t\t\tclassName='fas fa-chevron-circle-down btn btn--toggle-all'\n\t\t\t\t\t\tonClick={() => dispatch({ type: 'TOGGLE_ALL' })}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<input\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tclassName='add-todo__input'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Add a task...'\n\t\t\t\t\tid='add-todo'\n\t\t\t\t/>\n\t\t\t</label>\n\t\t</form>\n\t);\n};\n\nexport default AddTodoForm;\n","import React, { useContext } from 'react';\nimport { DispatchContext } from '../contexts/todos.context';\n\nconst ToggleBtn = ({ isDone, id, hiddenClass }) => {\n\tconst dispatch = useContext(DispatchContext);\n\n\tconst handleClick = () => {\n\t\tdispatch({ type: 'TOGGLE', id });\n\t};\n\n\treturn (\n\t\t<i\n\t\t\tonClick={handleClick}\n\t\t\tclassName={`far fa-${isDone\n\t\t\t\t? 'check-circle'\n\t\t\t\t: 'circle'} btn btn--toggle-one ${hiddenClass}`}\n\t\t/>\n\t);\n};\n\nexport default ToggleBtn;\n","import React, { useContext, memo } from 'react';\nimport { DispatchContext } from '../contexts/todos.context';\n\nconst DeleteBtn = ({ id }) => {\n\tconst dispatch = useContext(DispatchContext);\n\n\tconst handleClick = () => {\n\t\tdispatch({ type: 'DELETE', id });\n\t};\n\n\treturn <i onClick={handleClick} className='fas fa-times btn btn--remove' />;\n};\n\nexport default memo(DeleteBtn);\n","import { useState } from 'react';\n\nconst useEditState = (initialVal = false) => {\n\tconst [\n\t\tstate,\n\t\tsetState\n\t] = useState(initialVal);\n\n\tconst toggleEditState = () => {\n\t\tsetState(!state);\n\t};\n\n\treturn [\n\t\tstate,\n\t\ttoggleEditState\n\t];\n};\n\nexport default useEditState;\n","import React, { useContext } from 'react';\nimport ToggleBtn from './ToggleBtn';\nimport useInputState from '../hooks/useInputState';\nimport { DispatchContext } from '../contexts/todos.context';\n\nconst EditTodoForm = ({ id, content, toggleEditState }) => {\n\tconst [\n\t\tvalue,\n\t\thandleChange,\n\t\treset\n\t] = useInputState(content);\n\n\tconst dispatch = useContext(DispatchContext);\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tif (value) {\n\t\t\tdispatch({ type: 'EDIT', id, newTodoContent: value });\n\t\t\treset();\n\t\t\ttoggleEditState();\n\t\t}\n\t};\n\n\tconst handleBlur = e => {\n\t\tif (value) {\n\t\t\tdispatch({ type: 'EDIT', id, newTodoContent: value });\n\t\t\treset();\n\t\t\ttoggleEditState();\n\t\t} else {\n\t\t\treset();\n\t\t\ttoggleEditState();\n\t\t}\n\t};\n\n\treturn (\n\t\t<form className='list-item__left' onSubmit={handleSubmit}>\n\t\t\t<ToggleBtn hiddenClass={'hidden'} />\n\t\t\t<input\n\t\t\t\tonChange={handleChange}\n\t\t\t\tclassName='list-item__input'\n\t\t\t\ttype='text'\n\t\t\t\tvalue={value}\n\t\t\t\tonBlur={handleBlur}\n\t\t\t\tautoFocus\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nexport default EditTodoForm;\n","import React from 'react';\nimport ToggleBtn from './ToggleBtn';\nimport DeleteBtn from './DeleteBtn';\nimport useEditState from '../hooks/useEditState';\nimport EditTodoForm from './EditTodoForm';\n\nconst TodoItem = ({ content, isDone, id }) => {\n\tconst [\n\t\tisEditing,\n\t\ttoggleEditState\n\t] = useEditState(false);\n\n\treturn (\n\t\t<li className={`list-item ${isEditing && 'box-shadow-inset'}`}>\n\t\t\t{!isEditing ? (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className='list-item__left'>\n\t\t\t\t\t\t<ToggleBtn isDone={isDone} id={id} />\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`list-item__content ${isDone && 'done'}`}\n\t\t\t\t\t\t\tonDoubleClick={toggleEditState}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='list-item__right'>\n\t\t\t\t\t\t<em\n\t\t\t\t\t\t\tonDoubleClick={toggleEditState}\n\t\t\t\t\t\t\tclassName='list-item__date'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{new Date().toDateString()}\n\t\t\t\t\t\t</em>\n\t\t\t\t\t\t<DeleteBtn id={id} />\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t) : (\n\t\t\t\t<EditTodoForm\n\t\t\t\t\ttoggleEditState={toggleEditState}\n\t\t\t\t\tid={id}\n\t\t\t\t\tcontent={content}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</li>\n\t);\n};\n\nexport default TodoItem;\n","import React, { useContext } from 'react';\nimport TodoItem from './TodoItem';\nimport { TodosContext } from '../contexts/todos.context';\n\nconst TodoList = () => {\n\tconst todos = useContext(TodosContext);\n\n\treturn (\n\t\t<ul className='list'>\n\t\t\t{todos.map(todo => <TodoItem {...todo} key={todo.id} />)}\n\t\t</ul>\n\t);\n};\n\nexport default TodoList;\n","import React, { useContext, memo } from 'react';\nimport { TodosContext } from '../contexts/todos.context';\n\nconst Tooltip = () => {\n\tconst todos = useContext(TodosContext);\n\n\treturn (\n\t\t<p className='tooltip'>\n\t\t\t{todos.length > 0 ? 'double click to edit' : ''}\n\t\t</p>\n\t);\n};\n\nexport default Tooltip;\n","import React from 'react';\nimport AddTodoForm from './AddTodoForm';\nimport TodoList from './TodoList';\nimport Tooltip from './Tooltip';\nimport TodosProvider from '../contexts/todos.context';\n\nconst TodoApp = () => {\n\treturn (\n\t\t<TodosProvider>\n\t\t\t<div className='container'>\n\t\t\t\t<AddTodoForm />\n\t\t\t\t<TodoList />\n\t\t\t</div>\n\t\t\t<Tooltip />\n\t\t</TodosProvider>\n\t);\n};\n\nexport default TodoApp;\n","import React, { Fragment } from 'react';\nimport './sass/main.scss';\nimport TodoApp from './components/TodoApp';\n\nfunction App() {\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className='heading-primary'>todo list</h1>\n\t\t\t<TodoApp />\n\t\t</Fragment>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}